#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'dotenv'
require 'logger'
require 'rscout'
require 'mail'

Dotenv.load

class RscoutCommand < Thor
  desc 'test', 'Run tests'
  method_option :env, required: :true, type: :string, aliases: [:e], desc: 'The environment to run the test suite on.'
  method_option :send_success, type: :boolean, aliases: [:s], default: false, lazy_default: true, desc: 'Send notifications even without any test failures.'
  method_option :verbose, type: :boolean, aliases: [:v], default: false, lazy_default: true, desc: 'Show verbose messaging.'
  def test
    Mail.defaults do
      smtp = {}

      smtp[:user_name] = ENV['SMTP_USERNAME'] if ENV['SMTP_USERNAME']
      smtp[:password] = ENV['SMTP_PASSWORD'] if ENV['SMTP_PASSWORD']
      smtp[:domain] = ENV['SMTP_DOMAIN'] if ENV['SMTP_DOMAIN']
      smtp[:address] = ENV['SMTP_ADDRESS'] if ENV['SMTP_ADDRESS']
      smtp[:port] = ENV['SMTP_PORT'] if ENV['SMTP_PORT']
      smtp[:authentication] = ENV['SMTP_AUTHENTICATION'] if ENV['SMTP_AUTHENTICATION']
      smtp[:enable_starttls_auto] = ENV['SMTP_ENABLESTARTTLS_AUTO'] if ENV['SMTP_ENABLESTARTTLS_AUTO']

      delivery_method :smtp, smtp
    end

    RScout.options[:logger] = Logger.new(ENV['RSCOUT_LOG']) if ENV['RSCOUT_LOG']
    RScout.options[:env] = options.env
    RScout.options[:verbose] = options.verbose
    RScout.options[:from_email] = ENV['RSCOUT_EMAIL'] if ENV['RSCOUT_EMAIL']
    RScout.options[:send_success] = options.send_success

    RScout.run_suite Dir.pwd
  end
end

RscoutCommand.start